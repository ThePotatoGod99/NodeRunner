package hola;

import java.util.ArrayList;
import main.java.ca.umontreal.iro.hackathon.loderunner.*;

public class Cheminement {
	private WorldObject objetDepart;
	private WorldObject objetArrive;
	private World world;
	private ArrayList<Direction> checkpoint;
	private ArrayList<Direction> cheminFinal;
	private SVector3d avance = new SVector3d(1,0,0);
	private SVector3d monter = new SVector3d(0,1,0);
	
	
	public Cheminement(World world, WorldObject objetDepart, WorldObject objetArrive) {
		this.world = world;
		this.objetDepart = objetDepart;
		this.objetArrive = objetArrive;
	}
	public ArrayList<Direction> chemin(SVector3d depart, SVector3d arrive, Direction deplacement) {
		if(world.get(depart.add(avance)).equals(objetArrive)) {
			checkpoint.add(deplacement);
			cheminFinal.addAll(checkpoint);
			return cheminFinal;
		}else if(world.spaceIsAvailable(depart.add(avance))){
			if(world.get(depart.add(avance)).equals(TypeObjet.ECHELLE)) {
				checkpoint.add(deplacement);
			}
			depart = depart.add(avance);
			cheminFinal.add(deplacement);
			chemin(depart, arrive, Direction.RIGHT);
		}else {
			cheminFinal.clear();
			avance = avance.multiply(-1);
			chemin(objetDepart.getPosition(), objetArrive.getPosition(), Direction.LEFT);
		}
		return cheminFinal;
		
	}
}
